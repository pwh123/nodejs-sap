name: 自动部署 SAP3

on:
  workflow_dispatch:  # 手动触发
    inputs:
      environment:
        description: '选择部署环境'
        required: true
        default: 'production'
        type: choice
        options:
          - staging
          - production

env:
  IMAGE: ghcr.io/eooce/nodejs-argo:latest
  MEMORY: 2048M
  BASE_PREFIX_SG: "sgsapfixd"  # 新加坡
  BASE_PREFIX_US: "ussapfixd"  # 美国

jobs:
  deploy_all_regions:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CF CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install -y cf8-cli

      # 新加坡区域部署
      - name: 部署新加坡区域
        run: |
          # 配置新加坡参数
          CF_API="https://api.cf.ap21.hana.ondemand.com"
          APP_NAME="${{ env.BASE_PREFIX_SG }}"
          TARGET_ORG="${{ secrets.SG_ORG }}"
          TARGET_SPACE="${{ secrets.SG_SPACE }}"
          
          echo "开始部署新加坡区域：$APP_NAME"
          
          # 1. 登录API端点（不指定组织，先验证权限）
          echo "登录新加坡API端点：$CF_API"
          if ! cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"; then
            echo "❌ 登录API端点失败，请检查用户名/密码"
            exit 1
          fi
          
          # 2. 列出当前用户可访问的所有组织（便于排查）
          echo "📋 当前用户可访问的新加坡组织列表："
          cf orgs
          
          # 3. 验证目标组织是否存在
          echo "验证组织 $TARGET_ORG 是否存在..."
          if ! cf org "$TARGET_ORG" >/dev/null 2>&1; then
            echo "❌ 组织 $TARGET_ORG 不存在，请检查secrets.SG_ORG配置"
            exit 1
          fi
          echo "✅ 组织 $TARGET_ORG 存在"
          
          # 4. 切换到目标组织
          cf target -o "$TARGET_ORG"
          
          # 5. 检查并创建空间
          if ! cf space "$TARGET_SPACE" >/dev/null 2>&1; then
            echo "创建新加坡空间 $TARGET_SPACE..."
            cf create-space "$TARGET_SPACE" || { echo "❌ 空间创建失败"; exit 1; }
          else
            echo "✅ 新加坡空间 $TARGET_SPACE 已存在"
          fi
          cf target -s "$TARGET_SPACE"
          
          # 6. 部署应用及后续步骤
          cf push "$APP_NAME" --docker-image ${{ env.IMAGE }} -m ${{ env.MEMORY }} --health-check-type port
          
          cf set-env "$APP_NAME" NAME "SAP"
          cf set-env "$APP_NAME" NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
          cf set-env "$APP_NAME" NEZHA_PORT "${{ secrets.NEZHA_PORT }}"
          cf set-env "$APP_NAME" NEZHA_KEY "${{ secrets.NEZHA_KEY }}"
          cf set-env "$APP_NAME" UUID "${{ secrets.UUID_SG }}"
          cf set-env "$APP_NAME" ARGO_DOMAIN "${{ secrets.ARGO_DOMAIN_SG }}"
          
          cf restage "$APP_NAME"
          echo "✅ 新加坡区域部署完成"

      # 美国区域部署（同样增加组织验证逻辑）
      - name: 部署美国区域
        run: |
          # 配置美国参数
          CF_API="https://api.cf.us10-001.hana.ondemand.com"
          APP_NAME="${{ env.BASE_PREFIX_US }}"
          TARGET_ORG="${{ secrets.US_ORG }}"
          TARGET_SPACE="${{ secrets.US_SPACE }}"
          
          echo "开始部署美国区域：$APP_NAME"
          
          # 1. 登录API端点
          echo "登录美国API端点：$CF_API"
          if ! cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"; then
            echo "❌ 登录API端点失败，请检查用户名/密码"
            exit 1
          fi
          
          # 2. 列出可访问组织
          echo "📋 当前用户可访问的美国组织列表："
          cf orgs
          
          # 3. 验证目标组织
          echo "验证组织 $TARGET_ORG 是否存在..."
          if ! cf org "$TARGET_ORG" >/dev/null 2>&1; then
            echo "❌ 组织 $TARGET_ORG 不存在，请检查secrets.US_ORG配置"
            exit 1
          fi
          echo "✅ 组织 $TARGET_ORG 存在"
          
          # 4. 切换组织和空间
          cf target -o "$TARGET_ORG"
          
          if ! cf space "$TARGET_SPACE" >/dev/null 2>&1; then
            echo "创建美国空间 $TARGET_SPACE..."
            cf create-space "$TARGET_SPACE" || { echo "❌ 空间创建失败"; exit 1; }
          else
            echo "✅ 美国空间 $TARGET_SPACE 已存在"
          fi
          cf target -s "$TARGET_SPACE"
          
          # 5. 部署应用及后续步骤
          cf push "$APP_NAME" --docker-image ${{ env.IMAGE }} -m ${{ env.MEMORY }} --health-check-type port
          
          cf set-env "$APP_NAME" NAME "SAP"
          cf set-env "$APP_NAME" NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
          cf set-env "$APP_NAME" NEZHA_PORT "${{ secrets.NEZHA_PORT }}"
          cf set-env "$APP_NAME" NEZHA_KEY "${{ secrets.NEZHA_KEY }}"
          cf set-env "$APP_NAME" UUID "${{ secrets.UUID_US }}"
          cf set-env "$APP_NAME" ARGO_DOMAIN "${{ secrets.ARGO_DOMAIN_US }}"
          
          cf restage "$APP_NAME"
          echo "✅ 美国区域部署完成"

      - name: 验证所有区域部署结果
        run: |
          echo "所有区域部署已完成，可通过以下命令查看详情："
          echo "新加坡区域：cf app ${{ env.BASE_PREFIX_SG }} -a https://api.cf.ap21.hana.ondemand.com"
          echo "美国区域：cf app ${{ env.BASE_PREFIX_US }} -a https://api.cf.us10-001.hana.ondemand.com"
