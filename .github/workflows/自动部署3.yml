name: 自动部署 SAP3
on:
  workflow_dispatch:
    inputs:
      environment:
        description: '选择部署环境'
        required: true
        default: 'production'
        type: choice
        options:
          - staging
          - production

env:
  IMAGE: ghcr.io/pwh123/nodejs:main
  MEMORY: 512M
  APP_NAME_SG: "sgsapfixd"
  APP_NAME_US: "ussapfixd"
  TARGET_SPACE: "dev"
  ORG_MATCH_PATTERN: "trial|prod"

jobs:
  deploy_all_regions:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CF CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update && sudo apt-get install -y cf8-cli

      # 新加坡区域部署（补充ARGO变量）
      - name: 部署新加坡区域
        id: deploy_sg
        timeout-minutes: 8
        continue-on-error: true
        run: |
          CF_API="https://api.cf.ap21.hana.ondemand.com"
          APP_NAME="${{ env.APP_NAME_SG }}"
          
          echo "登录新加坡API端点..."
          cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
          
          TARGET_ORG=$(cf orgs | grep -E "${{ env.ORG_MATCH_PATTERN }}" | head -n 1)
          if [ -z "$TARGET_ORG" ]; then
            echo "❌ 未找到匹配组织"
            exit 1
          fi
          echo "使用组织：$TARGET_ORG"
          
          cf target -o "$TARGET_ORG"
          cf create-space -o "$TARGET_ORG" ${{ env.TARGET_SPACE }} || true
          cf target -s ${{ env.TARGET_SPACE }}
          
          cf push "$APP_NAME" --docker-image ${{ env.IMAGE }} -m ${{ env.MEMORY }} --health-check-type port
          
          # 新加坡ARGO相关变量（包含新增的变量，如ARGO_PATH）
          cf set-env "$APP_NAME" UUID "${{ secrets.UUID_SG }}"
          cf set-env "$APP_NAME" ARGO_DOMAIN "${{ secrets.ARGO_DOMAIN_SG }}"
          cf set-env "$APP_NAME" ARGO_PATH "${{ secrets.ARGO_PATH_SG }}"  # 新增ARGO变量
          
          # 通用变量
          cf set-env "$APP_NAME" NAME "SAP"
          cf set-env "$APP_NAME" NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
          
          cf restage "$APP_NAME"
          echo "✅ 新加坡部署完成（应用名：$APP_NAME）"

      # 美国区域部署（补充ARGO变量）
      - name: 部署美国区域
        timeout-minutes: 5
        run: |
          CF_API="https://api.cf.us10-001.hana.ondemand.com"
          APP_NAME="${{ env.APP_NAME_US }}"
          
          echo "登录美国API端点..."
          cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
          
          TARGET_ORG=$(cf orgs | grep -E "${{ env.ORG_MATCH_PATTERN }}" | head -n 1)
          if [ -z "$TARGET_ORG" ]; then
            echo "❌ 未找到匹配组织"
            exit 1
          fi
          echo "使用组织：$TARGET_ORG"
          
          cf target -o "$TARGET_ORG"
          cf create-space -o "$TARGET_ORG" ${{ env.TARGET_SPACE }} || true
          cf target -s ${{ env.TARGET_SPACE }}
          
          cf push "$APP_NAME" --docker-image ${{ env.IMAGE }} -m ${{ env.MEMORY }} --health-check-type port
          
          # 美国ARGO相关变量（包含新增的变量）
          cf set-env "$APP_NAME" UUID "${{ secrets.UUID_US }}"
          cf set-env "$APP_NAME" ARGO_DOMAIN "${{ secrets.ARGO_DOMAIN_US }}"
          cf set-env "$APP_NAME" ARGO_PATH "${{ secrets.ARGO_PATH_US }}"  # 新增ARGO变量
          
          # 通用变量
          cf set-env "$APP_NAME" NAME "SAP"
          cf set-env "$APP_NAME" NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
          
          cf restage "$APP_NAME"
          echo "✅ 美国部署完成（应用名：$APP_NAME）"

      - name: 部署结果汇总
        run: |
          if [ "${{ steps.deploy_sg.outcome }}" = "success" ]; then
            echo "🎉 新加坡、美国区域部署完成"
          else
            echo "⚠️ 新加坡区域部署失败，美国区域部署完成"
          fi
