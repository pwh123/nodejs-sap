name: Cloud Foundry
on:
  workflow_dispatch:
    inputs:
      regions:
        description: '选择重建区域'
        required: true
        default: 'sg,us'
        type: choice
        options:
          - sg,us  # 同时处理新加坡和美国
          - sg     # 仅新加坡
          - us     # 仅美国

env:
  # 通用配置
  ENV_INSTANCE_NAME: "cf-trial"
  SPACE_NAME: "dev"
  BTP_CLI_URL: "https://cpcli.cf.eu10.hana.ondemand.com"
  
  # 新加坡区域配置（sg）
  SUBACCOUNT_ID_SG: "fc63b4dc-2dd2-40fb-92a6-0e82b1b87b45"  # 新加坡子账户ID（可根据实际调整）
  REGION_SG: "ap-southeast-1"  # 新加坡区域标识
  CF_API_SG: "https://api.cf.ap21.hana.ondemand.com"  # 提供的新加坡API端点
  ORG_NAME_SG: "adac7863trial_adac7863trial_ext"  # 提供的新加坡组织名
  ORG_ID_SG: "80f49179-3d8c-467e-ae73-73f4238e9163"  # 提供的新加坡组织ID
  
  # 美国区域配置（us）
  SUBACCOUNT_ID_US: "fc63b4dc-2dd2-40fb-92a6-0e82b1b87b45"  # 美国子账户ID（可根据实际调整）
  REGION_US: "us-east-1"
  CF_API_US: "https://api.cf.us10-001.hana.ondemand.com"
  ORG_NAME_US: "sap-deploy-production-us"

jobs:
  rebuild_cf_environment:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ${{ fromJson(format('["{0}"]', replace(github.event.inputs.regions, ',', '","'))) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 安装 btp CLI
        run: |
          wget https://github.com/SAP-samples/btp-cli-installer/releases/latest/download/btp-cli-linux-amd64.tar.gz -O btp-cli.tar.gz
          tar -xzf btp-cli.tar.gz
          sudo mv btp /usr/local/bin/

      - name: 安装 cf CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update && sudo apt-get install -y cf8-cli

      - name: 登录 BTP 并删除旧环境实例（按区域）
        run: |
          # 根据区域选择子账户ID
          if [ "${{ matrix.region }}" = "sg" ]; then
            SUBACCOUNT_ID="${{ env.SUBACCOUNT_ID_SG }}"
          else
            SUBACCOUNT_ID="${{ env.SUBACCOUNT_ID_US }}"
          fi
          
          btp login --url "${{ env.BTP_CLI_URL }}" --subdomain "aws-us" --user "${{ secrets.EMAIL }}" --password "${{ secrets.PASSWORD }}"
          btp target -s "$SUBACCOUNT_ID"

          echo "🔍 检查${{ matrix.region }}区域旧环境实例是否存在..."
          if btp list accounts/environment-instance --subaccount "$SUBACCOUNT_ID" | grep "${{ env.ENV_INSTANCE_NAME }}"; then
            echo "🧼 删除${{ matrix.region }}区域旧环境实例：${{ env.ENV_INSTANCE_NAME }}"
            btp delete accounts/environment-instance --subaccount "$SUBACCOUNT_ID" --name "${{ env.ENV_INSTANCE_NAME }}" -f
          else
            echo "✅ ${{ matrix.region }}区域未发现旧环境实例，跳过删除"
          fi

      - name: 创建新的 Cloud Foundry 环境实例（按区域）
        run: |
          # 根据区域选择子账户ID和区域参数
          if [ "${{ matrix.region }}" = "sg" ]; then
            SUBACCOUNT_ID="${{ env.SUBACCOUNT_ID_SG }}"
            REGION="${{ env.REGION_SG }}"
          else
            SUBACCOUNT_ID="${{ env.SUBACCOUNT_ID_US }}"
            REGION="${{ env.REGION_US }}"
          fi
          
          btp create accounts/environment-instance \
            --subaccount "$SUBACCOUNT_ID" \
            --environment cloudfoundry \
            --service cloudfoundry \
            --plan free \
            --parameters "{ \"region\": \"$REGION\" }" \
            --name "${{ env.ENV_INSTANCE_NAME }}-${{ matrix.region }}"  # 实例名加区域后缀区分

      - name: 等待环境实例就绪
        run: |
          # 根据区域选择子账户ID
          if [ "${{ matrix.region }}" = "sg" ]; then
            SUBACCOUNT_ID="${{ env.SUBACCOUNT_ID_SG }}"
          else
            SUBACCOUNT_ID="${{ env.SUBACCOUNT_ID_US }}"
          fi
          
          INSTANCE_NAME="${{ env.ENV_INSTANCE_NAME }}-${{ matrix.region }}"
          echo "⌛ 等待${{ matrix.region }}区域环境实例就绪（最长5分钟）..."
          end_time=$((SECONDS + 300))
          while [ $SECONDS -lt $end_time ]; do
            if btp get accounts/environment-instance --subaccount "$SUBACCOUNT_ID" --name "$INSTANCE_NAME" | grep -q "status: RUNNING"; then
              echo "✅ ${{ matrix.region }}区域环境实例已就绪"
              exit 0
            fi
            sleep 10
          done
          echo "❌ ${{ matrix.region }}区域环境实例创建超时"
          exit 1

      - name: 登录 CF 并初始化组织空间（按区域）
        run: |
          # 根据区域选择API端点和组织名
          if [ "${{ matrix.region }}" = "sg" ]; then
            CF_API="${{ env.CF_API_SG }}"
            ORG_NAME="${{ env.ORG_NAME_SG }}"
          else
            CF_API="${{ env.CF_API_US }}"
            ORG_NAME="${{ env.ORG_NAME_US }}"
          fi
          
          echo "🔍 登录${{ matrix.region }}区域CF环境..."
          cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
          
          echo "🏭 处理${{ matrix.region }}区域组织：$ORG_NAME"
          # 新加坡区域使用提供的组织名（若已存在则复用）
          if [ "${{ matrix.region }}" = "sg" ]; then
            if ! cf org "$ORG_NAME" >/dev/null 2>&1; then
              echo "❌ 新加坡区域指定组织不存在：$ORG_NAME"
              exit 1
            fi
            echo "✅ 复用新加坡区域现有组织：$ORG_NAME"
          else
            # 美国区域创建新组织
            cf create-org "$ORG_NAME" || {
              if cf org "$ORG_NAME" >/dev/null 2>&1; then
                echo "⚠️ 美国区域组织已存在，复用现有组织"
              else
                echo "❌ 美国区域组织创建失败"
                exit 1
              fi
            }
          fi
          
          # 创建并切换到空间
          cf create-space "${{ env.SPACE_NAME }}" -o "$ORG_NAME" || true
          cf target -o "$ORG_NAME" -s "${{ env.SPACE_NAME }}"
          echo "✅ ${{ matrix.region }}区域Cloud Foundry环境初始化完成"
