name: 自动部署 SAP
on:
  workflow_dispatch:
    inputs:
      environment:
        description: '选择部署环境'
        required: true
        default: 'production'
        type: choice
        options:
          - staging
          - production
      regions:
        description: '选择部署区域（可多选）'
        required: true
        default: 'sg,us'  # 默认全选
        type: choice
        options:
          - sg,us  # 全部区域
          - sg     # 仅新加坡
          - us     # 仅美国

env:
  IMAGE: ghcr.io/eooce/nodejs-argo:latest
  MEMORY: 512M
  APP_NAME_SG: "sgsapfixd"
  APP_NAME_US: "ussapfixd"
  TARGET_SPACE: "dev"
  ORG_MATCH_PATTERN: "trial|prod"

jobs:
  deploy_selected_regions:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CF CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update && sudo apt-get install -y cf8-cli

      # 新加坡区域部署（条件执行）
      - name: 部署新加坡区域
        id: deploy_sg
        timeout-minutes: 5
        continue-on-error: true
        if: contains(github.event.inputs.regions, 'sg')  # 仅当选择包含sg时执行
        run: |
          CF_API="https://api.cf.ap21.hana.ondemand.com"
          APP_NAME="${{ env.APP_NAME_SG }}"
          
          echo "登录新加坡API端点..."
          cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
          
          # 列出可访问组织（便于排查）
          echo "📋 新加坡区域可访问组织："
          cf orgs
          
          # 获取目标组织
          TARGET_ORG=$(cf orgs | grep -E "${{ env.ORG_MATCH_PATTERN }}" | head -n 1)
          if [ -z "$TARGET_ORG" ]; then
            echo "❌ 新加坡未找到匹配组织"
            exit 1
          fi
          echo "使用组织：$TARGET_ORG"
          
          # 切换组织和空间
          cf target -o "$TARGET_ORG"
          cf create-space -o "$TARGET_ORG" ${{ env.TARGET_SPACE }} || true
          cf target -s ${{ env.TARGET_SPACE }}
          
          # 部署应用及变量
          cf push "$APP_NAME" --docker-image ${{ env.IMAGE }} -m ${{ env.MEMORY }} --health-check-type port
          cf set-env "$APP_NAME" UUID "${{ secrets.UUID_SG }}"
          cf set-env "$APP_NAME" ARGO_DOMAIN "${{ secrets.ARGO_DOMAIN_SG }}"
          cf set-env "$APP_NAME" ARGO_AUTH "${{ secrets.ARGO_AUTH_SG }}"
          cf set-env "$APP_NAME" SUB_PATH "${{ secrets.SUB_PATH }}"
          cf set-env "$APP_NAME" NAME "SAP"
          cf set-env "$APP_NAME" NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
          cf set-env "$APP_NAME" NEZHA_PORT "${{ secrets.NEZHA_PORT }}"
          cf set-env "$APP_NAME" NEZHA_KEY "${{ secrets.NEZHA_KEY }}"
          
          cf restage "$APP_NAME"
          echo "✅ 新加坡部署完成"

      # 美国区域部署（条件执行）
      - name: 部署美国区域
        id: deploy_us
        timeout-minutes: 5
        if: contains(github.event.inputs.regions, 'us')  # 仅当选择包含us时执行
        run: |
          CF_API="https://api.cf.us10-001.hana.ondemand.com"
          APP_NAME="${{ env.APP_NAME_US }}"
          
          echo "登录美国API端点..."
          cf login -a "$CF_API" -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
          
          # 列出可访问组织（便于排查）
          echo "📋 美国区域可访问组织："
          cf orgs
          
          # 获取目标组织
          TARGET_ORG=$(cf orgs | grep -E "${{ env.ORG_MATCH_PATTERN }}" | head -n 1)
          if [ -z "$TARGET_ORG" ]; then
            echo "❌ 美国未找到匹配组织"
            exit 1
          fi
          echo "使用组织：$TARGET_ORG"
          
          # 切换组织和空间
          cf target -o "$TARGET_ORG"
          cf create-space -o "$TARGET_ORG" ${{ env.TARGET_SPACE }} || true
          cf target -s ${{ env.TARGET_SPACE }}
          
          # 部署应用及变量
          cf push "$APP_NAME" --docker-image ${{ env.IMAGE }} -m ${{ env.MEMORY }} --health-check-type port
          cf set-env "$APP_NAME" UUID "${{ secrets.UUID_US }}"
          cf set-env "$APP_NAME" ARGO_DOMAIN "${{ secrets.ARGO_DOMAIN_US }}"
          cf set-env "$APP_NAME" ARGO_AUTH "${{ secrets.ARGO_AUTH_US }}"
          cf set-env "$APP_NAME" SUB_PATH "${{ secrets.SUB_PATH }}"
          cf set-env "$APP_NAME" NAME "SAP"
          cf set-env "$APP_NAME" NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
          cf set-env "$APP_NAME" NEZHA_PORT "${{ secrets.NEZHA_PORT }}"
          cf set-env "$APP_NAME" NEZHA_KEY "${{ secrets.NEZHA_KEY }}"
          
          cf restage "$APP_NAME"
          echo "✅ 美国部署完成"

      - name: 部署结果汇总
        run: |
          # 根据选择的区域和执行结果输出汇总信息
          if [ "${{ github.event.inputs.regions }}" = "sg,us" ]; then
            if [ "${{ steps.deploy_sg.outcome }}" = "success" ] && [ "${{ steps.deploy_us.outcome }}" = "success" ]; then
              echo "🎉 全部区域部署完成"
            else
              echo "⚠️ 部分区域部署失败（新加坡：${{ steps.deploy_sg.outcome }}, 美国：${{ steps.deploy_us.outcome }}"
            fi
          elif [ "${{ github.event.inputs.regions }}" = "sg" ]; then
            if [ "${{ steps.deploy_sg.outcome }}" = "success" ]; then
              echo "🎉 新加坡区域部署完成"
            else
              echo "⚠️ 新加坡区域部署失败"
            fi
          else
            if [ "${{ steps.deploy_us.outcome }}" = "success" ]; then
              echo "🎉 美国区域部署完成"
            else
              echo "⚠️ 美国区域部署失败"
            fi
          fi
