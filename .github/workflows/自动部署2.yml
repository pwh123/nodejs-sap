name: 自动部署 SAP2

on:
  workflow_dispatch:
    inputs:
      environment:
        description: '选择部署环境'
        required: true
        default: 'production'
        type: choice
        options:
          - staging
          - production
      region:
        description: '选择部署区域'
        required: true
        default: 'SG'
        type: choice
        options:
          - SG  # 新加坡
          - US  # 美国
          - ALL # 新加坡+美国
      app_name:
        description: '应用名称（可选，留空则使用默认固定名称）'
        required: false
        default: ''
      image_type:
        description: '选择镜像版本'
        required: true
        type: choice
        options:
          - 镜像1
          - 镜像2
          - 镜像3
          - 镜像4  # 火狐镜像

env:
  # 镜像地址映射（镜像4改为火狐镜像）
  IMAGE1: ghcr.io/eooce/nodejs-argo:main
  IMAGE2: ghcr.io/uncleluogithub/mous:latest
  IMAGE3: ghcr.io/eooce/node-ws:main
  IMAGE4: jlesage/firefox  # 火狐镜像
  MEMORY: 512M
  BASE_PREFIX_SG: "sgsapfixd"  # 新加坡基础前缀
  BASE_PREFIX_US: "ussapfixd"  # 美国基础前缀
  # Firefox必要环境变量默认值（可通过Secrets覆盖）
  FIREFOX_PUID: 1000
  FIREFOX_PGID: 1000
  FIREFOX_TZ: "Asia/Shanghai"  # 默认为上海时区

jobs:
  deploy_sg:
    if: github.event.inputs.region == 'SG' || github.event.inputs.region == 'ALL'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: SG | 生成应用名称
      run: |
        if [ -n "${{ github.event.inputs.app_name }}" ]; then
          APP_NAME="${{ env.BASE_PREFIX_SG }}${{ github.event.inputs.app_name }}"
        else
          APP_NAME="${{ env.BASE_PREFIX_SG }}"
        fi
        echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
        echo "新加坡区域应用名称: $APP_NAME"

    - name: SG | 选择镜像
      run: |
        case "${{ github.event.inputs.image_type }}" in
          "镜像1")
            SELECTED_IMAGE="${{ env.IMAGE1 }}"
            ;;
          "镜像2")
            SELECTED_IMAGE="${{ env.IMAGE2 }}"
            ;;
          "镜像3")
            SELECTED_IMAGE="${{ env.IMAGE3 }}"
            ;;
          "镜像4")
            SELECTED_IMAGE="${{ env.IMAGE4 }}"  # 火狐镜像
            ;;
        esac
        echo "SELECTED_IMAGE=$SELECTED_IMAGE" >> $GITHUB_ENV
        echo "新加坡区域选择镜像: ${{ github.event.inputs.image_type }}（$SELECTED_IMAGE）"

    - name: SG | 登录 Cloud Foundry
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}" -o "${{ secrets.SG_ORG }}" -s "${{ secrets.SG_SPACE }}"

    - name: SG | 部署应用
      run: |
        cf push ${{ env.APP_NAME }} --docker-image ${{ env.SELECTED_IMAGE }} -m ${{ env.MEMORY }} --health-check-type port

    - name: SG | 设置环境变量（含Firefox必要变量）
      run: |
        # 通用变量
        cf set-env ${{ env.APP_NAME }} NAME "SAP"
        cf set-env ${{ env.APP_NAME }} NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
        cf set-env ${{ env.APP_NAME }} UUID "${{ secrets.UUID_SG }}"
        cf set-env ${{ env.APP_NAME }} SUB_PATH "${{ secrets.SUB_PATH }}"
        
        # Firefox必要环境变量（镜像4专用）
        if [ "${{ github.event.inputs.image_type }}" = "镜像4" ]; then
          cf set-env ${{ env.APP_NAME }} PUID "${{ secrets.FIREFOX_PUID || env.FIREFOX_PUID }}"
          cf set-env ${{ env.APP_NAME }} PGID "${{ secrets.FIREFOX_PGID || env.FIREFOX_PGID }}"
          cf set-env ${{ env.APP_NAME }} TZ "${{ secrets.FIREFOX_TZ || env.FIREFOX_TZ }}"
          echo "已为火狐镜像设置必要环境变量"
        fi

    - name: SG | 验证部署
      run: |
        cf app ${{ env.APP_NAME }}
        cf logs ${{ env.APP_NAME }} --recent
        echo "新加坡区域部署完成：${{ env.APP_NAME }}"

  deploy_us:
    if: github.event.inputs.region == 'US' || github.event.inputs.region == 'ALL'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: US | 生成应用名称
      run: |
        if [ -n "${{ github.event.inputs.app_name }}" ]; then
          APP_NAME="${{ env.BASE_PREFIX_US }}${{ github.event.inputs.app_name }}"
        else
          APP_NAME="${{ env.BASE_PREFIX_US }}"
        fi
        echo "CF_API=https://api.cf.us10-001.hana.ondemand.com" >> $GITHUB_ENV
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
        echo "美国区域应用名称: $APP_NAME"

    - name: US | 选择镜像
      run: |
        case "${{ github.event.inputs.image_type }}" in
          "镜像1")
            SELECTED_IMAGE="${{ env.IMAGE1 }}"
            ;;
          "镜像2")
            SELECTED_IMAGE="${{ env.IMAGE2 }}"
            ;;
          "镜像3")
            SELECTED_IMAGE="${{ env.IMAGE3 }}"
            ;;
          "镜像4")
            SELECTED_IMAGE="${{ env.IMAGE4 }}"  # 火狐镜像
            ;;
        esac
        echo "SELECTED_IMAGE=$SELECTED_IMAGE" >> $GITHUB_ENV
        echo "美国区域选择镜像: ${{ github.event.inputs.image_type }}（$SELECTED_IMAGE）"

    - name: US | 登录 Cloud Foundry
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}" -o "${{ secrets.US_ORG }}" -s "${{ secrets.US_SPACE }}"

    - name: US | 部署应用
      run: |
        cf push ${{ env.APP_NAME }} --docker-image ${{ env.SELECTED_IMAGE }} -m ${{ env.MEMORY }} --health-check-type port

    - name: US | 设置环境变量（含Firefox必要变量）
      run: |
        # 通用变量
        cf set-env ${{ env.APP_NAME }} NAME "SAP"
        cf set-env ${{ env.APP_NAME }} NEZHA_SERVER "${{ secrets.NEZHA_SERVER }}"
        cf set-env ${{ env.APP_NAME }} UUID "${{ secrets.UUID_US }}"
        cf set-env ${{ env.APP_NAME }} SUB_PATH "${{ secrets.SUB_PATH }}"
        
        # Firefox必要环境变量（镜像4专用）
        if [ "${{ github.event.inputs.image_type }}" = "镜像4" ]; then
          cf set-env ${{ env.APP_NAME }} PUID "${{ secrets.FIREFOX_PUID || env.FIREFOX_PUID }}"
          cf set-env ${{ env.APP_NAME }} PGID "${{ secrets.FIREFOX_PGID || env.FIREFOX_PGID }}"
          cf set-env ${{ env.APP_NAME }} TZ "${{ secrets.FIREFOX_TZ || env.FIREFOX_TZ }}"
          echo "已为火狐镜像设置必要环境变量"
        fi

    - name: US | 验证部署
      run: |
        cf app ${{ env.APP_NAME }}
        cf logs ${{ env.APP_NAME }} --recent
        echo "美国区域部署完成：${{ env.APP_NAME }}"
